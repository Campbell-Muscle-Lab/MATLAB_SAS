function stats = two_way_jitter(varargin)

% Parse params
p = inputParser;
addRequired(p,'excel_file_string');
addRequired(p,'test_variable');
addRequired(p,'factor_1');
addRequired(p,'factor_2');
addOptional(p,'excel_sheet',[]);
addOptional(p,'grouping',[]);
addOptional(p,'factor_1_strings',[]);
addOptional(p,'factor_2_strings',[]);
addOptional(p,'results_file_string','sas_results\sas_results');
addOptional(p,'results_type','html');
addOptional(p,'tidy_low_concentrations_in_SAS',0');
addOptional(p,'calling_path_string','');
addOptional(p,'convert_grouping_numbers_to_strings',0);
addOptional(p,'treat_f2_numbers_as_strings',1);
addOptional(p,'f2_numbers_as_strings_decimal_places',8);
addOptional(p,'figure_number',[]);
addOptional(p,'axis_handle',[]);
addOptional(p,'y_label_offset',-0.25);
addOptional(p,'title_y_offset',1.75);
addOptional(p,'marker_size',8);
addOptional(p,'marker_transparency',[]);
addOptional(p,'title_prefix','');
addOptional(p,'y_from_zero',1);

parse(p,varargin{:});

p = p.Results;

% Code
if (~isempty(p.grouping))
    stats = sas_two_way_anova_with_grouping( ...
                'excel_file_string',p.excel_file_string, ...
                'excel_sheet',p.excel_sheet, ...
                'test_variable',p.test_variable, ...
                'factor_1',p.factor_1, ...
                'factor_2',p.factor_2, ...
                'grouping',p.grouping, ...
                'results_file_string',p.results_file_string, ...
                'results_type',p.results_type, ...
                'calling_path_string',p.calling_path_string, ...
                'tidy_low_concentrations_in_SAS',p.tidy_low_concentrations_in_SAS, ...
                'treat_f2_numbers_as_strings',p.treat_f2_numbers_as_strings, ...
                'f2_numbers_as_strings_decimal_places',p.f2_numbers_as_strings_decimal_places);
else
    stats = sas_two_way_anova_without_grouping( ...
                'excel_file_string',p.excel_file_string, ...
                'excel_sheet',p.excel_sheet, ...
                'test_variable',p.test_variable, ...
                'factor_1',p.factor_1, ...
                'factor_2',p.factor_2, ...
                'results_file_string',p.results_file_string, ...
                'results_type',p.results_type, ...
                'calling_path_string',p.calling_path_string);
end
                
[od,jd] = extract_two_way_data( ...
            'excel_file_string',p.excel_file_string, ...
            'excel_sheet',p.excel_sheet, ...
            'parameter_string',p.test_variable, ...
            'factor_1',p.factor_1, ...
            'factor_2',p.factor_2, ...
            'grouping',p.grouping, ...
            'convert_grouping_numbers_to_strings', ...
                p.convert_grouping_numbers_to_strings');
            
if (isempty(p.figure_number) & isempty(p.axis_handle))            
    p.figure_number = 1
    figure(p.figure_number);
    clf
    sp = initialise_publication_quality_figure( ...
        'no_of_panels_wide',1, ...
        'no_of_panels_high',1, ...
        'right_margin',1, ...
        'top_margin',2, ...
        'axes_padding_left',2, ...
        'x_to_y_axes_ratio',2, ...
        'panel_label_font_size',0);
else
    subplot(p.axis_handle);
end

p_string = write_p_table_to_string(stats.p_table);
vi = regexp(p_string,'\n');
title_string = p_string(1:vi(3)-1);
if (~isempty(p.title_prefix))
    title_string = sprintf('%s\n%s',p.title_prefix,title_string);
end

jd_out = jitter_plot( ...
    'data',jd, ...
    'y_axis_label',p.test_variable, ...
    'group_names',jd(1).f1_strings, ...
    'sub_names',jd(1).f2_strings, ...
    'y_label_text_interpreter','none', ...
    'y_label_offset',p.y_label_offset, ...
    'marker_size',p.marker_size, ...
    'marker_transparency',p.marker_transparency, ...
    'title',title_string, ...
    'title_y_offset',p.title_y_offset, ...
    'y_from_zero',p.y_from_zero);

sl = return_stat_lines( ...
        '2way_LMM_with_grouping', ...
        stats.p_table, ...
        p.factor_1,p.factor_2,jd(1).f1_strings,jd(1).f2_strings, ...
        jd_out.y_ticks)
    
stat_lines('line_data',sl);    










